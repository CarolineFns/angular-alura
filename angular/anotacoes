npm install -g @angular/cli
ng new alurapic
ng --version
cd alurapic
ng serve --open

-------------
ERROR in node_modules/rxjs
npm install rxjs@6.0.0 --save
-------------

- Angular utiliza a linguagem typescript
- localhost:4200
- tudo é um componente em angular, que guarda: 
comportamento, o CSS, e a marcação HTML, a estrutura, em um único local
- @Component, Decorator que torna a classe um componente
- metainformação
- selector: 'app-root' ---   <app-root></app-root>
- selector nos permite utilizar o componente em templates em sua forma declarativa, 
então, todo o conteúdo de app.component.ts, sua apresentação, o que ele faz, 
seu CSS, são acessados por meio dele.
- Angular utiliza um webpack, um module bundle, isto é, um empacotador de módulos famoso, 
utilizado por Create React App, Vue CLI, e outros frameworks Single Page Application.  
Mas nenhum momento estas configurações do webpack são exibidas, 
pois elas ficam encapsuladas pelo Angular CLI.

- {{ title }} -> Angular expression (AE) e dentro expressão
- Data binding, ou "associação de dados"
- One way data binding ("data binding unidirecional")
- Quando formos realizar Data binding com atributos HTML do nosso component, 
usaremos os colchetes. E quando formos exibir um valor em uma tag, ou isoladamente, 
usaremos uma Angular Expression.
- Utilizamos {{ }} dentro de tags e [ ] para atributos
- menubar.component.ts -> MenubarComponent
- https://angular.io/

- npm install bootstrap@4.1.1
- angular.json
"styles": [
    "src/styles.css",
    "./node_modules/bootstrap/dist/css/bootstrap.min.css"
],
"scripts": []
- <img class="img-thumbnail" [src]="url" [alt]="title">

- um componente obrigatoriamente precisa fazer parte de um módulo.
- O módulo, é uma forma de organizarmos a nossa aplicação
- app.module.ts é o primeiro módulo a ser carregado
- <ap-photo url="https://upload.wikimedia.org/wikipedia/commons/thumb/2/2d/Lioness_Etosha_NP.jpg/500px-Lioness_Etosha_NP.jpg" description="Leoa"></ap-photo>
- @Input() -> receber um parâmetro externo, passando um valor por meio da forma declarativa do componente
- Inbound properties, ou seja, aceitam receber um valor por meio de sua forma declarativa.

- feature module
- @NgModule
@NgModule({
    declarations: [ PhotoComponent ],
    exports: [ PhotoComponent ]
})
<ap-photo
    *ngFor="let photo of photos"
    [url]="photo.url"
    [description]="photo.description"
>
</ap-photo>
